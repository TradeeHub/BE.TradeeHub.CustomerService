schema {
  query: Query
  mutation: Mutation
}

type AddressDbObject {
  address: String
  city: String
  postcode: String
  fullAddress: String
}

type CommentDbObject {
  comment: String
  uploadUrls: [String!]!
}

type CustomerDbObject {
  properties: [PropertyDbObject]
  id: ID!
  customerReferenceNumber: String!
  title: String
  name: String
  surname: String
  fullName: String!
  alias: String
  status: String!
  emails: [EmailDbObject!]
  phoneNumbers: [PhoneNumberDbObject!]
  tags: [String!]
  createdAt: DateTime!
  createdBy: UUID!
  modifiedAt: DateTime
  modifiedBy: UUID
  referredByCustomer: ID
  referredByOther: String
  referralFeeFixed: Decimal
  referralFeePercentage: Decimal
  customerRating: Decimal
  comments: [CommentDbObject!]
}

"A connection to a list of items."
type CustomersConnection {
  "Information to aid in pagination."
  pageInfo: PageInfo!
  "A list of edges."
  edges: [CustomersEdge!]
  "A flattened list of the nodes."
  nodes: [CustomerDbObject!]
}

"An edge in a connection."
type CustomersEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: CustomerDbObject!
}

type EmailDbObject {
  emailType: String!
  email: String!
}

type Mutation {
  generateFakeCustomers(quantity: Int!): String!
}

"Information about pagination in a connection."
type PageInfo {
  "Indicates whether more edges exist following the set defined by the clients arguments."
  hasNextPage: Boolean!
  "Indicates whether more edges exist prior the set defined by the clients arguments."
  hasPreviousPage: Boolean!
  "When paginating backwards, the cursor to continue."
  startCursor: String
  "When paginating forwards, the cursor to continue."
  endCursor: String
}

type PhoneNumberDbObject {
  phoneNumberType: String!
  phoneNumber: String!
}

type PropertyDbObject {
  "The customers associated with this property."
  customers: [CustomerDbObject]
  id: ID!
  property: AddressDbObject!
  billing: AddressDbObject
  location: String
  quotes: [ID!]
  jobs: [ID!]
  createdAt: DateTime!
  createdBy: UUID!
  modifiedAt: DateTime
  modifiedBy: UUID
}

type Query {
  customers("Returns the first _n_ elements from the list." first: Int "Returns the elements in the list that come after the specified cursor." after: String "Returns the last _n_ elements from the list." last: Int "Returns the elements in the list that come before the specified cursor." before: String order_by: CustomerDbObjectSort where: CustomerDbObjectFilter): CustomersConnection @authorize
  customerById(id: ID!): CustomerDbObject @authorize
}

input CommentDbObjectFilter {
  AND: [CommentDbObjectFilter!]
  OR: [CommentDbObjectFilter!]
  comment: String
  comment_not: String
  comment_contains: String
  comment_not_contains: String
  comment_starts_with: String
  comment_not_starts_with: String
  comment_ends_with: String
  comment_not_ends_with: String
  comment_in: [String]
  comment_not_in: [String]
  uploadUrls_some: ISingleFilterOfStringFilter
  uploadUrls_none: ISingleFilterOfStringFilter
  uploadUrls_all: ISingleFilterOfStringFilter
  uploadUrls_any: Boolean
}

input CustomerDbObjectFilter {
  AND: [CustomerDbObjectFilter!]
  OR: [CustomerDbObjectFilter!]
  customerReferenceNumber: String
  customerReferenceNumber_not: String
  customerReferenceNumber_contains: String
  customerReferenceNumber_not_contains: String
  customerReferenceNumber_starts_with: String
  customerReferenceNumber_not_starts_with: String
  customerReferenceNumber_ends_with: String
  customerReferenceNumber_not_ends_with: String
  customerReferenceNumber_in: [String!]
  customerReferenceNumber_not_in: [String!]
  title: String
  title_not: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  title_in: [String]
  title_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_in: [String]
  name_not_in: [String]
  surname: String
  surname_not: String
  surname_contains: String
  surname_not_contains: String
  surname_starts_with: String
  surname_not_starts_with: String
  surname_ends_with: String
  surname_not_ends_with: String
  surname_in: [String]
  surname_not_in: [String]
  fullName: String
  fullName_not: String
  fullName_contains: String
  fullName_not_contains: String
  fullName_starts_with: String
  fullName_not_starts_with: String
  fullName_ends_with: String
  fullName_not_ends_with: String
  fullName_in: [String!]
  fullName_not_in: [String!]
  alias: String
  alias_not: String
  alias_contains: String
  alias_not_contains: String
  alias_starts_with: String
  alias_not_starts_with: String
  alias_ends_with: String
  alias_not_ends_with: String
  alias_in: [String]
  alias_not_in: [String]
  status: String
  status_not: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  status_in: [String!]
  status_not_in: [String!]
  emails_some: EmailDbObjectFilter
  emails_none: EmailDbObjectFilter
  emails_all: EmailDbObjectFilter
  emails_any: Boolean
  phoneNumbers_some: PhoneNumberDbObjectFilter
  phoneNumbers_none: PhoneNumberDbObjectFilter
  phoneNumbers_all: PhoneNumberDbObjectFilter
  phoneNumbers_any: Boolean
  properties_some: ObjectIdFilter
  properties_none: ObjectIdFilter
  properties_all: ObjectIdFilter
  properties_any: Boolean
  tags_some: ISingleFilterOfStringFilter
  tags_none: ISingleFilterOfStringFilter
  tags_all: ISingleFilterOfStringFilter
  tags_any: Boolean
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_gt: DateTime
  createdAt_not_gt: DateTime
  createdAt_gte: DateTime
  createdAt_not_gte: DateTime
  createdAt_lt: DateTime
  createdAt_not_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not_lte: DateTime
  createdBy: UUID
  createdBy_not: UUID
  createdBy_in: [UUID!]
  createdBy_not_in: [UUID!]
  createdBy_gt: UUID
  createdBy_not_gt: UUID
  createdBy_gte: UUID
  createdBy_not_gte: UUID
  createdBy_lt: UUID
  createdBy_not_lt: UUID
  createdBy_lte: UUID
  createdBy_not_lte: UUID
  modifiedAt: DateTime
  modifiedAt_not: DateTime
  modifiedAt_in: [DateTime]
  modifiedAt_not_in: [DateTime]
  modifiedAt_gt: DateTime
  modifiedAt_not_gt: DateTime
  modifiedAt_gte: DateTime
  modifiedAt_not_gte: DateTime
  modifiedAt_lt: DateTime
  modifiedAt_not_lt: DateTime
  modifiedAt_lte: DateTime
  modifiedAt_not_lte: DateTime
  modifiedBy: UUID
  modifiedBy_not: UUID
  modifiedBy_in: [UUID]
  modifiedBy_not_in: [UUID]
  modifiedBy_gt: UUID
  modifiedBy_not_gt: UUID
  modifiedBy_gte: UUID
  modifiedBy_not_gte: UUID
  modifiedBy_lt: UUID
  modifiedBy_not_lt: UUID
  modifiedBy_lte: UUID
  modifiedBy_not_lte: UUID
  referredByOther: String
  referredByOther_not: String
  referredByOther_contains: String
  referredByOther_not_contains: String
  referredByOther_starts_with: String
  referredByOther_not_starts_with: String
  referredByOther_ends_with: String
  referredByOther_not_ends_with: String
  referredByOther_in: [String]
  referredByOther_not_in: [String]
  referralFeeFixed: Decimal
  referralFeeFixed_not: Decimal
  referralFeeFixed_in: [Decimal]
  referralFeeFixed_not_in: [Decimal]
  referralFeeFixed_gt: Decimal
  referralFeeFixed_not_gt: Decimal
  referralFeeFixed_gte: Decimal
  referralFeeFixed_not_gte: Decimal
  referralFeeFixed_lt: Decimal
  referralFeeFixed_not_lt: Decimal
  referralFeeFixed_lte: Decimal
  referralFeeFixed_not_lte: Decimal
  referralFeePercentage: Decimal
  referralFeePercentage_not: Decimal
  referralFeePercentage_in: [Decimal]
  referralFeePercentage_not_in: [Decimal]
  referralFeePercentage_gt: Decimal
  referralFeePercentage_not_gt: Decimal
  referralFeePercentage_gte: Decimal
  referralFeePercentage_not_gte: Decimal
  referralFeePercentage_lt: Decimal
  referralFeePercentage_not_lt: Decimal
  referralFeePercentage_lte: Decimal
  referralFeePercentage_not_lte: Decimal
  customerRating: Decimal
  customerRating_not: Decimal
  customerRating_in: [Decimal]
  customerRating_not_in: [Decimal]
  customerRating_gt: Decimal
  customerRating_not_gt: Decimal
  customerRating_gte: Decimal
  customerRating_not_gte: Decimal
  customerRating_lt: Decimal
  customerRating_not_lt: Decimal
  customerRating_lte: Decimal
  customerRating_not_lte: Decimal
  comments_some: CommentDbObjectFilter
  comments_none: CommentDbObjectFilter
  comments_all: CommentDbObjectFilter
  comments_any: Boolean
}

input CustomerDbObjectSort {
  customerReferenceNumber: SortOperationKind
  title: SortOperationKind
  name: SortOperationKind
  surname: SortOperationKind
  fullName: SortOperationKind
  alias: SortOperationKind
  status: SortOperationKind
  createdAt: SortOperationKind
  createdBy: SortOperationKind
  modifiedAt: SortOperationKind
  modifiedBy: SortOperationKind
  referredByOther: SortOperationKind
  referralFeeFixed: SortOperationKind
  referralFeePercentage: SortOperationKind
  customerRating: SortOperationKind
}

input EmailDbObjectFilter {
  AND: [EmailDbObjectFilter!]
  OR: [EmailDbObjectFilter!]
  emailType: String
  emailType_not: String
  emailType_contains: String
  emailType_not_contains: String
  emailType_starts_with: String
  emailType_not_starts_with: String
  emailType_ends_with: String
  emailType_not_ends_with: String
  emailType_in: [String!]
  emailType_not_in: [String!]
  email: String
  email_not: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  email_in: [String!]
  email_not_in: [String!]
}

input ISingleFilterOfStringFilter {
  AND: [ISingleFilterOfStringFilter!]
  OR: [ISingleFilterOfStringFilter!]
  element: String
  element_not: String
  element_contains: String
  element_not_contains: String
  element_starts_with: String
  element_not_starts_with: String
  element_ends_with: String
  element_not_ends_with: String
  element_in: [String!]
  element_not_in: [String!]
}

input ObjectIdFilter {
  AND: [ObjectIdFilter!]
  OR: [ObjectIdFilter!]
  timestamp: Int
  timestamp_not: Int
  timestamp_in: [Int!]
  timestamp_not_in: [Int!]
  timestamp_gt: Int
  timestamp_not_gt: Int
  timestamp_gte: Int
  timestamp_not_gte: Int
  timestamp_lt: Int
  timestamp_not_lt: Int
  timestamp_lte: Int
  timestamp_not_lte: Int
  machine: Int
  machine_not: Int
  machine_in: [Int!]
  machine_not_in: [Int!]
  machine_gt: Int
  machine_not_gt: Int
  machine_gte: Int
  machine_not_gte: Int
  machine_lt: Int
  machine_not_lt: Int
  machine_lte: Int
  machine_not_lte: Int
  pid: Short
  pid_not: Short
  pid_in: [Short!]
  pid_not_in: [Short!]
  pid_gt: Short
  pid_not_gt: Short
  pid_gte: Short
  pid_not_gte: Short
  pid_lt: Short
  pid_not_lt: Short
  pid_lte: Short
  pid_not_lte: Short
  increment: Int
  increment_not: Int
  increment_in: [Int!]
  increment_not_in: [Int!]
  increment_gt: Int
  increment_not_gt: Int
  increment_gte: Int
  increment_not_gte: Int
  increment_lt: Int
  increment_not_lt: Int
  increment_lte: Int
  increment_not_lte: Int
  creationTime: DateTime
  creationTime_not: DateTime
  creationTime_in: [DateTime!]
  creationTime_not_in: [DateTime!]
  creationTime_gt: DateTime
  creationTime_not_gt: DateTime
  creationTime_gte: DateTime
  creationTime_not_gte: DateTime
  creationTime_lt: DateTime
  creationTime_not_lt: DateTime
  creationTime_lte: DateTime
  creationTime_not_lte: DateTime
}

input PhoneNumberDbObjectFilter {
  AND: [PhoneNumberDbObjectFilter!]
  OR: [PhoneNumberDbObjectFilter!]
  phoneNumberType: String
  phoneNumberType_not: String
  phoneNumberType_contains: String
  phoneNumberType_not_contains: String
  phoneNumberType_starts_with: String
  phoneNumberType_not_starts_with: String
  phoneNumberType_ends_with: String
  phoneNumberType_not_ends_with: String
  phoneNumberType_in: [String!]
  phoneNumberType_not_in: [String!]
  phoneNumber: String
  phoneNumber_not: String
  phoneNumber_contains: String
  phoneNumber_not_contains: String
  phoneNumber_starts_with: String
  phoneNumber_not_starts_with: String
  phoneNumber_ends_with: String
  phoneNumber_not_ends_with: String
  phoneNumber_in: [String!]
  phoneNumber_not_in: [String!]
}

enum ApplyPolicy {
  BEFORE_RESOLVER
  AFTER_RESOLVER
  VALIDATION
}

enum SortOperationKind {
  ASC
  DESC
}

directive @authorize("The name of the authorization policy that determines access to the annotated resource." policy: String "Roles that are allowed to access the annotated resource." roles: [String!] "Defines when when the authorize directive shall be applied.By default the authorize directives are applied during the validation phase." apply: ApplyPolicy! = BEFORE_RESOLVER) repeatable on OBJECT | FIELD_DEFINITION

"The `DateTime` scalar represents an ISO-8601 compliant date time type."
scalar DateTime @specifiedBy(url: "https:\/\/www.graphql-scalars.com\/date-time")

"The built-in `Decimal` scalar type."
scalar Decimal

"The `Short` scalar type represents non-fractional signed whole 16-bit numeric values. Short can represent values between -(2^15) and 2^15 - 1."
scalar Short

scalar UUID @specifiedBy(url: "https:\/\/tools.ietf.org\/html\/rfc4122")